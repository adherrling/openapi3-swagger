# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyMilestonesDestinyMilestoneContent(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'about': 'str',
        'status': 'str',
        'tips': 'list[str]',
        'item_categories': 'list[ComponentsschemasDestinyMilestonesDestinyMilestoneContentItemCategory]'
    }

    attribute_map = {
        'about': 'about',
        'status': 'status',
        'tips': 'tips',
        'item_categories': 'itemCategories'
    }

    def __init__(self, about=None, status=None, tips=None, item_categories=None):
        """
        DestinyMilestonesDestinyMilestoneContent - a model defined in Swagger
        """

        self._about = None
        self._status = None
        self._tips = None
        self._item_categories = None
        self.discriminator = None

        if about is not None:
          self.about = about
        if status is not None:
          self.status = status
        if tips is not None:
          self.tips = tips
        if item_categories is not None:
          self.item_categories = item_categories

    @property
    def about(self):
        """
        Gets the about of this DestinyMilestonesDestinyMilestoneContent.
        The \"About this Milestone\" text from the Firehose.

        :return: The about of this DestinyMilestonesDestinyMilestoneContent.
        :rtype: str
        """
        return self._about

    @about.setter
    def about(self, about):
        """
        Sets the about of this DestinyMilestonesDestinyMilestoneContent.
        The \"About this Milestone\" text from the Firehose.

        :param about: The about of this DestinyMilestonesDestinyMilestoneContent.
        :type: str
        """

        self._about = about

    @property
    def status(self):
        """
        Gets the status of this DestinyMilestonesDestinyMilestoneContent.
        The Current Status of the Milestone, as driven by the Firehose.

        :return: The status of this DestinyMilestonesDestinyMilestoneContent.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this DestinyMilestonesDestinyMilestoneContent.
        The Current Status of the Milestone, as driven by the Firehose.

        :param status: The status of this DestinyMilestonesDestinyMilestoneContent.
        :type: str
        """

        self._status = status

    @property
    def tips(self):
        """
        Gets the tips of this DestinyMilestonesDestinyMilestoneContent.
        A list of tips, provided by the Firehose.

        :return: The tips of this DestinyMilestonesDestinyMilestoneContent.
        :rtype: list[str]
        """
        return self._tips

    @tips.setter
    def tips(self, tips):
        """
        Sets the tips of this DestinyMilestonesDestinyMilestoneContent.
        A list of tips, provided by the Firehose.

        :param tips: The tips of this DestinyMilestonesDestinyMilestoneContent.
        :type: list[str]
        """

        self._tips = tips

    @property
    def item_categories(self):
        """
        Gets the item_categories of this DestinyMilestonesDestinyMilestoneContent.
        If DPS has defined items related to this Milestone, they can categorize those items in the Firehose.That data will then be returned as item categories here.

        :return: The item_categories of this DestinyMilestonesDestinyMilestoneContent.
        :rtype: list[ComponentsschemasDestinyMilestonesDestinyMilestoneContentItemCategory]
        """
        return self._item_categories

    @item_categories.setter
    def item_categories(self, item_categories):
        """
        Sets the item_categories of this DestinyMilestonesDestinyMilestoneContent.
        If DPS has defined items related to this Milestone, they can categorize those items in the Firehose.That data will then be returned as item categories here.

        :param item_categories: The item_categories of this DestinyMilestonesDestinyMilestoneContent.
        :type: list[ComponentsschemasDestinyMilestonesDestinyMilestoneContentItemCategory]
        """

        self._item_categories = item_categories

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyMilestonesDestinyMilestoneContent):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
