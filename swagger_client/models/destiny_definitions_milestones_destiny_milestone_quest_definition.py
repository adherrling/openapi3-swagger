# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'quest_item_hash': 'int',
        'override_image': 'str',
        'activities': 'dict(str, ComponentsschemasDestinyDefinitionsMilestonesDestinyMilestoneActivityDefinition)'
    }

    attribute_map = {
        'quest_item_hash': 'questItemHash',
        'override_image': 'overrideImage',
        'activities': 'activities'
    }

    def __init__(self, quest_item_hash=None, override_image=None, activities=None):
        """
        DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition - a model defined in Swagger
        """

        self._quest_item_hash = None
        self._override_image = None
        self._activities = None
        self.discriminator = None

        if quest_item_hash is not None:
          self.quest_item_hash = quest_item_hash
        if override_image is not None:
          self.override_image = override_image
        if activities is not None:
          self.activities = activities

    @property
    def quest_item_hash(self):
        """
        Gets the quest_item_hash of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        The item representing this Milestone quest.  Use this hash to look up the DestinyInventoryItemDefinitionfor the quest to find its steps and human readable data.

        :return: The quest_item_hash of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        :rtype: int
        """
        return self._quest_item_hash

    @quest_item_hash.setter
    def quest_item_hash(self, quest_item_hash):
        """
        Sets the quest_item_hash of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        The item representing this Milestone quest.  Use this hash to look up the DestinyInventoryItemDefinitionfor the quest to find its steps and human readable data.

        :param quest_item_hash: The quest_item_hash of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        :type: int
        """

        self._quest_item_hash = quest_item_hash

    @property
    def override_image(self):
        """
        Gets the override_image of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        If populated, this image can be shown instead of the generic milestone's image when this quest is live,or it can be used to show a background image for the quest itself that differs from that of the Activityor the Milestone.

        :return: The override_image of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        :rtype: str
        """
        return self._override_image

    @override_image.setter
    def override_image(self, override_image):
        """
        Sets the override_image of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        If populated, this image can be shown instead of the generic milestone's image when this quest is live,or it can be used to show a background image for the quest itself that differs from that of the Activityor the Milestone.

        :param override_image: The override_image of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        :type: str
        """

        self._override_image = override_image

    @property
    def activities(self):
        """
        Gets the activities of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        The full set of all possible \"conceptual activities\" that are related to this Milestone.Tiers or alternative modes of play within these conceptual activities will be defined as sub-entities.Keyed by the Conceptual Activity Hash.  Use the key to look up DestinyActivityDefinition.

        :return: The activities of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        :rtype: dict(str, ComponentsschemasDestinyDefinitionsMilestonesDestinyMilestoneActivityDefinition)
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """
        Sets the activities of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        The full set of all possible \"conceptual activities\" that are related to this Milestone.Tiers or alternative modes of play within these conceptual activities will be defined as sub-entities.Keyed by the Conceptual Activity Hash.  Use the key to look up DestinyActivityDefinition.

        :param activities: The activities of this DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition.
        :type: dict(str, ComponentsschemasDestinyDefinitionsMilestonesDestinyMilestoneActivityDefinition)
        """

        self._activities = activities

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
