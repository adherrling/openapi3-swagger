# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyDefinitionsDestinyVendorInteractionDefinition(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'replies': 'list[ComponentsschemasDestinyDefinitionsDestinyVendorInteractionReplyDefinition]',
        'vendor_category_index': 'int',
        'questline_item_hash': 'int',
        'sack_interaction_list': 'list[ComponentsschemasDestinyDefinitionsDestinyVendorInteractionSackEntryDefinition]',
        'ui_interaction_type': 'int',
        'reward_block_label': 'str',
        'reward_vendor_category_index': 'int',
        'flavor_line_one': 'str',
        'flavor_line_two': 'str',
        'instructions': 'str'
    }

    attribute_map = {
        'replies': 'replies',
        'vendor_category_index': 'vendorCategoryIndex',
        'questline_item_hash': 'questlineItemHash',
        'sack_interaction_list': 'sackInteractionList',
        'ui_interaction_type': 'uiInteractionType',
        'reward_block_label': 'rewardBlockLabel',
        'reward_vendor_category_index': 'rewardVendorCategoryIndex',
        'flavor_line_one': 'flavorLineOne',
        'flavor_line_two': 'flavorLineTwo',
        'instructions': 'instructions'
    }

    def __init__(self, replies=None, vendor_category_index=None, questline_item_hash=None, sack_interaction_list=None, ui_interaction_type=None, reward_block_label=None, reward_vendor_category_index=None, flavor_line_one=None, flavor_line_two=None, instructions=None):
        """
        DestinyDefinitionsDestinyVendorInteractionDefinition - a model defined in Swagger
        """

        self._replies = None
        self._vendor_category_index = None
        self._questline_item_hash = None
        self._sack_interaction_list = None
        self._ui_interaction_type = None
        self._reward_block_label = None
        self._reward_vendor_category_index = None
        self._flavor_line_one = None
        self._flavor_line_two = None
        self._instructions = None
        self.discriminator = None

        if replies is not None:
          self.replies = replies
        if vendor_category_index is not None:
          self.vendor_category_index = vendor_category_index
        if questline_item_hash is not None:
          self.questline_item_hash = questline_item_hash
        if sack_interaction_list is not None:
          self.sack_interaction_list = sack_interaction_list
        if ui_interaction_type is not None:
          self.ui_interaction_type = ui_interaction_type
        if reward_block_label is not None:
          self.reward_block_label = reward_block_label
        if reward_vendor_category_index is not None:
          self.reward_vendor_category_index = reward_vendor_category_index
        if flavor_line_one is not None:
          self.flavor_line_one = flavor_line_one
        if flavor_line_two is not None:
          self.flavor_line_two = flavor_line_two
        if instructions is not None:
          self.instructions = instructions

    @property
    def replies(self):
        """
        Gets the replies of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        The potential replies that the user can make to the interaction.

        :return: The replies of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: list[ComponentsschemasDestinyDefinitionsDestinyVendorInteractionReplyDefinition]
        """
        return self._replies

    @replies.setter
    def replies(self, replies):
        """
        Sets the replies of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        The potential replies that the user can make to the interaction.

        :param replies: The replies of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: list[ComponentsschemasDestinyDefinitionsDestinyVendorInteractionReplyDefinition]
        """

        self._replies = replies

    @property
    def vendor_category_index(self):
        """
        Gets the vendor_category_index of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If >= 0, this is the category of sale items to show along with this interaction dialog.

        :return: The vendor_category_index of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: int
        """
        return self._vendor_category_index

    @vendor_category_index.setter
    def vendor_category_index(self, vendor_category_index):
        """
        Sets the vendor_category_index of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If >= 0, this is the category of sale items to show along with this interaction dialog.

        :param vendor_category_index: The vendor_category_index of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: int
        """

        self._vendor_category_index = vendor_category_index

    @property
    def questline_item_hash(self):
        """
        Gets the questline_item_hash of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If this interaction dialog is about a quest, this is the questline related to the interaction.You can use this to show the quest overview, or even the character's status with the quest ifyou use it to find the character's current Quest Step by checking their inventory against this questlineItemHash'sDestinyInventoryItemDefinition.setData.

        :return: The questline_item_hash of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: int
        """
        return self._questline_item_hash

    @questline_item_hash.setter
    def questline_item_hash(self, questline_item_hash):
        """
        Sets the questline_item_hash of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If this interaction dialog is about a quest, this is the questline related to the interaction.You can use this to show the quest overview, or even the character's status with the quest ifyou use it to find the character's current Quest Step by checking their inventory against this questlineItemHash'sDestinyInventoryItemDefinition.setData.

        :param questline_item_hash: The questline_item_hash of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: int
        """

        self._questline_item_hash = questline_item_hash

    @property
    def sack_interaction_list(self):
        """
        Gets the sack_interaction_list of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If this interaction is meant to show you sacks, this is the list of types of sacks to be shown.If empty, the interaction is not meant to show sacks.

        :return: The sack_interaction_list of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: list[ComponentsschemasDestinyDefinitionsDestinyVendorInteractionSackEntryDefinition]
        """
        return self._sack_interaction_list

    @sack_interaction_list.setter
    def sack_interaction_list(self, sack_interaction_list):
        """
        Sets the sack_interaction_list of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If this interaction is meant to show you sacks, this is the list of types of sacks to be shown.If empty, the interaction is not meant to show sacks.

        :param sack_interaction_list: The sack_interaction_list of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: list[ComponentsschemasDestinyDefinitionsDestinyVendorInteractionSackEntryDefinition]
        """

        self._sack_interaction_list = sack_interaction_list

    @property
    def ui_interaction_type(self):
        """
        Gets the ui_interaction_type of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        A UI hint for the behavior of the interaction screen.  BNet doesn't use this, but you can choose to.

        :return: The ui_interaction_type of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: int
        """
        return self._ui_interaction_type

    @ui_interaction_type.setter
    def ui_interaction_type(self, ui_interaction_type):
        """
        Sets the ui_interaction_type of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        A UI hint for the behavior of the interaction screen.  BNet doesn't use this, but you can choose to.

        :param ui_interaction_type: The ui_interaction_type of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: int
        """

        self._ui_interaction_type = ui_interaction_type

    @property
    def reward_block_label(self):
        """
        Gets the reward_block_label of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If this interaction is displaying rewards, this is the text to use for the header of thereward-displaying section of the interaction.

        :return: The reward_block_label of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: str
        """
        return self._reward_block_label

    @reward_block_label.setter
    def reward_block_label(self, reward_block_label):
        """
        Sets the reward_block_label of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If this interaction is displaying rewards, this is the text to use for the header of thereward-displaying section of the interaction.

        :param reward_block_label: The reward_block_label of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: str
        """

        self._reward_block_label = reward_block_label

    @property
    def reward_vendor_category_index(self):
        """
        Gets the reward_vendor_category_index of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If the vendor's reward list is sourced from one of his categories, this is the index intothe category array of items to show.

        :return: The reward_vendor_category_index of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: int
        """
        return self._reward_vendor_category_index

    @reward_vendor_category_index.setter
    def reward_vendor_category_index(self, reward_vendor_category_index):
        """
        Sets the reward_vendor_category_index of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If the vendor's reward list is sourced from one of his categories, this is the index intothe category array of items to show.

        :param reward_vendor_category_index: The reward_vendor_category_index of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: int
        """

        self._reward_vendor_category_index = reward_vendor_category_index

    @property
    def flavor_line_one(self):
        """
        Gets the flavor_line_one of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If the vendor interaction has flavor text, this is some of it.

        :return: The flavor_line_one of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: str
        """
        return self._flavor_line_one

    @flavor_line_one.setter
    def flavor_line_one(self, flavor_line_one):
        """
        Sets the flavor_line_one of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If the vendor interaction has flavor text, this is some of it.

        :param flavor_line_one: The flavor_line_one of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: str
        """

        self._flavor_line_one = flavor_line_one

    @property
    def flavor_line_two(self):
        """
        Gets the flavor_line_two of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If the vendor interaction has flavor text, this is the rest of it.

        :return: The flavor_line_two of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: str
        """
        return self._flavor_line_two

    @flavor_line_two.setter
    def flavor_line_two(self, flavor_line_two):
        """
        Sets the flavor_line_two of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        If the vendor interaction has flavor text, this is the rest of it.

        :param flavor_line_two: The flavor_line_two of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: str
        """

        self._flavor_line_two = flavor_line_two

    @property
    def instructions(self):
        """
        Gets the instructions of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        The localized text telling the player what to do when they see this dialog.

        :return: The instructions of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :rtype: str
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """
        Sets the instructions of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        The localized text telling the player what to do when they see this dialog.

        :param instructions: The instructions of this DestinyDefinitionsDestinyVendorInteractionDefinition.
        :type: str
        """

        self._instructions = instructions

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyDefinitionsDestinyVendorInteractionDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
