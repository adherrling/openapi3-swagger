# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyDefinitionsDestinyItemSocketBlockDefinition(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'detail': 'str',
        'socket_entries': 'list[ComponentsschemasDestinyDefinitionsDestinyItemSocketEntryDefinition]',
        'socket_categories': 'list[ComponentsschemasDestinyDefinitionsDestinyItemSocketCategoryDefinition]'
    }

    attribute_map = {
        'detail': 'detail',
        'socket_entries': 'socketEntries',
        'socket_categories': 'socketCategories'
    }

    def __init__(self, detail=None, socket_entries=None, socket_categories=None):
        """
        DestinyDefinitionsDestinyItemSocketBlockDefinition - a model defined in Swagger
        """

        self._detail = None
        self._socket_entries = None
        self._socket_categories = None
        self.discriminator = None

        if detail is not None:
          self.detail = detail
        if socket_entries is not None:
          self.socket_entries = socket_entries
        if socket_categories is not None:
          self.socket_categories = socket_categories

    @property
    def detail(self):
        """
        Gets the detail of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        This was supposed to be a string that would give per-item details about sockets.In practice, it turns out that all this ever has is the localized word \"details\".... that's lame, but perhaps it will become something cool in the future.

        :return: The detail of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """
        Sets the detail of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        This was supposed to be a string that would give per-item details about sockets.In practice, it turns out that all this ever has is the localized word \"details\".... that's lame, but perhaps it will become something cool in the future.

        :param detail: The detail of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        :type: str
        """

        self._detail = detail

    @property
    def socket_entries(self):
        """
        Gets the socket_entries of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        Each socket on an item is defined here.  Check inside for more info.

        :return: The socket_entries of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        :rtype: list[ComponentsschemasDestinyDefinitionsDestinyItemSocketEntryDefinition]
        """
        return self._socket_entries

    @socket_entries.setter
    def socket_entries(self, socket_entries):
        """
        Sets the socket_entries of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        Each socket on an item is defined here.  Check inside for more info.

        :param socket_entries: The socket_entries of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        :type: list[ComponentsschemasDestinyDefinitionsDestinyItemSocketEntryDefinition]
        """

        self._socket_entries = socket_entries

    @property
    def socket_categories(self):
        """
        Gets the socket_categories of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        A convenience property, that refers to the sockets in the \"sockets\" property, pre-groupedby category and ordered in the manner that they should be grouped in the UI.You could form this yourself with the existing data, but why would you want to?  Enjoy life man.

        :return: The socket_categories of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        :rtype: list[ComponentsschemasDestinyDefinitionsDestinyItemSocketCategoryDefinition]
        """
        return self._socket_categories

    @socket_categories.setter
    def socket_categories(self, socket_categories):
        """
        Sets the socket_categories of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        A convenience property, that refers to the sockets in the \"sockets\" property, pre-groupedby category and ordered in the manner that they should be grouped in the UI.You could form this yourself with the existing data, but why would you want to?  Enjoy life man.

        :param socket_categories: The socket_categories of this DestinyDefinitionsDestinyItemSocketBlockDefinition.
        :type: list[ComponentsschemasDestinyDefinitionsDestinyItemSocketCategoryDefinition]
        """

        self._socket_categories = socket_categories

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyDefinitionsDestinyItemSocketBlockDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
