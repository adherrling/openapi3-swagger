# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyDestinyEquipItemResult(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'item_instance_id': 'int'
    }

    attribute_map = {
        'item_instance_id': 'itemInstanceId'
    }

    def __init__(self, item_instance_id=None):
        """
        DestinyDestinyEquipItemResult - a model defined in Swagger
        """

        self._item_instance_id = None
        self.discriminator = None

        if item_instance_id is not None:
          self.item_instance_id = item_instance_id

    @property
    def item_instance_id(self):
        """
        Gets the item_instance_id of this DestinyDestinyEquipItemResult.
        The instance ID of the item in question (all items that can be equipped must, but definition,be Instanced and thus have an Instance ID that you can use to refer to them)

        :return: The item_instance_id of this DestinyDestinyEquipItemResult.
        :rtype: int
        """
        return self._item_instance_id

    @item_instance_id.setter
    def item_instance_id(self, item_instance_id):
        """
        Sets the item_instance_id of this DestinyDestinyEquipItemResult.
        The instance ID of the item in question (all items that can be equipped must, but definition,be Instanced and thus have an Instance ID that you can use to refer to them)

        :param item_instance_id: The item_instance_id of this DestinyDestinyEquipItemResult.
        :type: int
        """

        self._item_instance_id = item_instance_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyDestinyEquipItemResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
