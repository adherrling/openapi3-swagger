# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyEntitiesCharactersDestinyCharacterActivitiesComponent(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'date_activity_started': 'datetime',
        'available_activities': 'list[ComponentsschemasDestinyDestinyActivity]',
        'current_activity_hash': 'int',
        'current_activity_mode_hash': 'int',
        'last_completed_story_hash': 'int'
    }

    attribute_map = {
        'date_activity_started': 'dateActivityStarted',
        'available_activities': 'availableActivities',
        'current_activity_hash': 'currentActivityHash',
        'current_activity_mode_hash': 'currentActivityModeHash',
        'last_completed_story_hash': 'lastCompletedStoryHash'
    }

    def __init__(self, date_activity_started=None, available_activities=None, current_activity_hash=None, current_activity_mode_hash=None, last_completed_story_hash=None):
        """
        DestinyEntitiesCharactersDestinyCharacterActivitiesComponent - a model defined in Swagger
        """

        self._date_activity_started = None
        self._available_activities = None
        self._current_activity_hash = None
        self._current_activity_mode_hash = None
        self._last_completed_story_hash = None
        self.discriminator = None

        if date_activity_started is not None:
          self.date_activity_started = date_activity_started
        if available_activities is not None:
          self.available_activities = available_activities
        if current_activity_hash is not None:
          self.current_activity_hash = current_activity_hash
        if current_activity_mode_hash is not None:
          self.current_activity_mode_hash = current_activity_mode_hash
        if last_completed_story_hash is not None:
          self.last_completed_story_hash = last_completed_story_hash

    @property
    def date_activity_started(self):
        """
        Gets the date_activity_started of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        The last date that the user started playing an activity.

        :return: The date_activity_started of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :rtype: datetime
        """
        return self._date_activity_started

    @date_activity_started.setter
    def date_activity_started(self, date_activity_started):
        """
        Sets the date_activity_started of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        The last date that the user started playing an activity.

        :param date_activity_started: The date_activity_started of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :type: datetime
        """

        self._date_activity_started = date_activity_started

    @property
    def available_activities(self):
        """
        Gets the available_activities of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        The list of activities that the user can play.

        :return: The available_activities of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :rtype: list[ComponentsschemasDestinyDestinyActivity]
        """
        return self._available_activities

    @available_activities.setter
    def available_activities(self, available_activities):
        """
        Sets the available_activities of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        The list of activities that the user can play.

        :param available_activities: The available_activities of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :type: list[ComponentsschemasDestinyDestinyActivity]
        """

        self._available_activities = available_activities

    @property
    def current_activity_hash(self):
        """
        Gets the current_activity_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        If the user is in an activity, this will be the hash of the Activity being played.Note that you must combine this info with currentActivityModeHash to get a real picture of whatthe user is doing right now.  For instance, PVP \"Activities\" are just maps: it's the ActivityModethat determines what type of PVP game they're playing.

        :return: The current_activity_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :rtype: int
        """
        return self._current_activity_hash

    @current_activity_hash.setter
    def current_activity_hash(self, current_activity_hash):
        """
        Sets the current_activity_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        If the user is in an activity, this will be the hash of the Activity being played.Note that you must combine this info with currentActivityModeHash to get a real picture of whatthe user is doing right now.  For instance, PVP \"Activities\" are just maps: it's the ActivityModethat determines what type of PVP game they're playing.

        :param current_activity_hash: The current_activity_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :type: int
        """

        self._current_activity_hash = current_activity_hash

    @property
    def current_activity_mode_hash(self):
        """
        Gets the current_activity_mode_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        If the user is in an activity, this will be the hash of the activity mode being played.Combine with currentActivityHash to give a person a full picture of what they're doing right now.

        :return: The current_activity_mode_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :rtype: int
        """
        return self._current_activity_mode_hash

    @current_activity_mode_hash.setter
    def current_activity_mode_hash(self, current_activity_mode_hash):
        """
        Sets the current_activity_mode_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        If the user is in an activity, this will be the hash of the activity mode being played.Combine with currentActivityHash to give a person a full picture of what they're doing right now.

        :param current_activity_mode_hash: The current_activity_mode_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :type: int
        """

        self._current_activity_mode_hash = current_activity_mode_hash

    @property
    def last_completed_story_hash(self):
        """
        Gets the last_completed_story_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        This will have the activity hash of the last completed story/campaign mission, in case you care about that.

        :return: The last_completed_story_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :rtype: int
        """
        return self._last_completed_story_hash

    @last_completed_story_hash.setter
    def last_completed_story_hash(self, last_completed_story_hash):
        """
        Sets the last_completed_story_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        This will have the activity hash of the last completed story/campaign mission, in case you care about that.

        :param last_completed_story_hash: The last_completed_story_hash of this DestinyEntitiesCharactersDestinyCharacterActivitiesComponent.
        :type: int
        """

        self._last_completed_story_hash = last_completed_story_hash

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyEntitiesCharactersDestinyCharacterActivitiesComponent):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
