# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'activity_hash': 'int',
        'order': 'int'
    }

    attribute_map = {
        'activity_hash': 'activityHash',
        'order': 'order'
    }

    def __init__(self, activity_hash=None, order=None):
        """
        DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition - a model defined in Swagger
        """

        self._activity_hash = None
        self._order = None
        self.discriminator = None

        if activity_hash is not None:
          self.activity_hash = activity_hash
        if order is not None:
          self.order = order

    @property
    def activity_hash(self):
        """
        Gets the activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition.
        The hash to use for looking up the variant Activity's definition (DestinyActivityDefinition),where you can find its distinguishing characteristics such as difficulty level and recommendedlight level.    Frequently, that will be the only distinguishing characteristics in practice, whichis somewhat of a bummer.

        :return: The activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition.
        :rtype: int
        """
        return self._activity_hash

    @activity_hash.setter
    def activity_hash(self, activity_hash):
        """
        Sets the activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition.
        The hash to use for looking up the variant Activity's definition (DestinyActivityDefinition),where you can find its distinguishing characteristics such as difficulty level and recommendedlight level.    Frequently, that will be the only distinguishing characteristics in practice, whichis somewhat of a bummer.

        :param activity_hash: The activity_hash of this DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition.
        :type: int
        """

        self._activity_hash = activity_hash

    @property
    def order(self):
        """
        Gets the order of this DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition.
        If you care to do so, render the variants in the order prescribed by this value.  When you combine live Milestone data with the definition, the order becomes more usefulbecause you'll be cross-referencing between the definition and live data.

        :return: The order of this DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition.
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """
        Sets the order of this DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition.
        If you care to do so, render the variants in the order prescribed by this value.  When you combine live Milestone data with the definition, the order becomes more usefulbecause you'll be cross-referencing between the definition and live data.

        :param order: The order of this DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition.
        :type: int
        """

        self._order = order

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyDefinitionsMilestonesDestinyMilestoneActivityVariantDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
