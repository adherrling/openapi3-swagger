# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyDefinitionsDestinyItemPreviewBlockDefinition(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'preview_vendor_hash': 'int',
        'preview_action_string': 'str',
        'derived_item_categories': 'list[ComponentsschemasDestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition]'
    }

    attribute_map = {
        'preview_vendor_hash': 'previewVendorHash',
        'preview_action_string': 'previewActionString',
        'derived_item_categories': 'derivedItemCategories'
    }

    def __init__(self, preview_vendor_hash=None, preview_action_string=None, derived_item_categories=None):
        """
        DestinyDefinitionsDestinyItemPreviewBlockDefinition - a model defined in Swagger
        """

        self._preview_vendor_hash = None
        self._preview_action_string = None
        self._derived_item_categories = None
        self.discriminator = None

        if preview_vendor_hash is not None:
          self.preview_vendor_hash = preview_vendor_hash
        if preview_action_string is not None:
          self.preview_action_string = preview_action_string
        if derived_item_categories is not None:
          self.derived_item_categories = derived_item_categories

    @property
    def preview_vendor_hash(self):
        """
        Gets the preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        If the preview data is derived from a fake \"Preview\" Vendor, this willbe the hash identifier for the DestinyVendorDefinition of that fake vendor.

        :return: The preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :rtype: int
        """
        return self._preview_vendor_hash

    @preview_vendor_hash.setter
    def preview_vendor_hash(self, preview_vendor_hash):
        """
        Sets the preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        If the preview data is derived from a fake \"Preview\" Vendor, this willbe the hash identifier for the DestinyVendorDefinition of that fake vendor.

        :param preview_vendor_hash: The preview_vendor_hash of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :type: int
        """

        self._preview_vendor_hash = preview_vendor_hash

    @property
    def preview_action_string(self):
        """
        Gets the preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        If the preview has an associated action (like \"Open\"), this will be the localizedstring for that action.

        :return: The preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :rtype: str
        """
        return self._preview_action_string

    @preview_action_string.setter
    def preview_action_string(self, preview_action_string):
        """
        Sets the preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        If the preview has an associated action (like \"Open\"), this will be the localizedstring for that action.

        :param preview_action_string: The preview_action_string of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :type: str
        """

        self._preview_action_string = preview_action_string

    @property
    def derived_item_categories(self):
        """
        Gets the derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        This is a list of the items being previewed, categorized in the same way as they arein the preview UI.

        :return: The derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :rtype: list[ComponentsschemasDestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition]
        """
        return self._derived_item_categories

    @derived_item_categories.setter
    def derived_item_categories(self, derived_item_categories):
        """
        Sets the derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        This is a list of the items being previewed, categorized in the same way as they arein the preview UI.

        :param derived_item_categories: The derived_item_categories of this DestinyDefinitionsDestinyItemPreviewBlockDefinition.
        :type: list[ComponentsschemasDestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition]
        """

        self._derived_item_categories = derived_item_categories

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyDefinitionsDestinyItemPreviewBlockDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
