# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyDefinitionsDestinyActivityGuidedBlockDefinition(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'guided_max_lobby_size': 'int',
        'guided_min_lobby_size': 'int',
        'guided_disband_count': 'int'
    }

    attribute_map = {
        'guided_max_lobby_size': 'guidedMaxLobbySize',
        'guided_min_lobby_size': 'guidedMinLobbySize',
        'guided_disband_count': 'guidedDisbandCount'
    }

    def __init__(self, guided_max_lobby_size=None, guided_min_lobby_size=None, guided_disband_count=None):
        """
        DestinyDefinitionsDestinyActivityGuidedBlockDefinition - a model defined in Swagger
        """

        self._guided_max_lobby_size = None
        self._guided_min_lobby_size = None
        self._guided_disband_count = None
        self.discriminator = None

        if guided_max_lobby_size is not None:
          self.guided_max_lobby_size = guided_max_lobby_size
        if guided_min_lobby_size is not None:
          self.guided_min_lobby_size = guided_min_lobby_size
        if guided_disband_count is not None:
          self.guided_disband_count = guided_disband_count

    @property
    def guided_max_lobby_size(self):
        """
        Gets the guided_max_lobby_size of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        The maximum amount of people that can be in the waiting lobby.

        :return: The guided_max_lobby_size of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        :rtype: int
        """
        return self._guided_max_lobby_size

    @guided_max_lobby_size.setter
    def guided_max_lobby_size(self, guided_max_lobby_size):
        """
        Sets the guided_max_lobby_size of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        The maximum amount of people that can be in the waiting lobby.

        :param guided_max_lobby_size: The guided_max_lobby_size of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        :type: int
        """

        self._guided_max_lobby_size = guided_max_lobby_size

    @property
    def guided_min_lobby_size(self):
        """
        Gets the guided_min_lobby_size of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        The minimum amount of people that can be in the waiting lobby.

        :return: The guided_min_lobby_size of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        :rtype: int
        """
        return self._guided_min_lobby_size

    @guided_min_lobby_size.setter
    def guided_min_lobby_size(self, guided_min_lobby_size):
        """
        Sets the guided_min_lobby_size of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        The minimum amount of people that can be in the waiting lobby.

        :param guided_min_lobby_size: The guided_min_lobby_size of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        :type: int
        """

        self._guided_min_lobby_size = guided_min_lobby_size

    @property
    def guided_disband_count(self):
        """
        Gets the guided_disband_count of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        If -1, the guided group cannot be disbanded.  Otherwise, take the total # of players in the activityand subtract this number: that is the total # of votes needed for the guided group to disband.

        :return: The guided_disband_count of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        :rtype: int
        """
        return self._guided_disband_count

    @guided_disband_count.setter
    def guided_disband_count(self, guided_disband_count):
        """
        Sets the guided_disband_count of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        If -1, the guided group cannot be disbanded.  Otherwise, take the total # of players in the activityand subtract this number: that is the total # of votes needed for the guided group to disband.

        :param guided_disband_count: The guided_disband_count of this DestinyDefinitionsDestinyActivityGuidedBlockDefinition.
        :type: int
        """

        self._guided_disband_count = guided_disband_count

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyDefinitionsDestinyActivityGuidedBlockDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
