# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyEntitiesProfilesDestinyProfileComponent(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'date_last_played': 'datetime',
        'character_ids': 'list[int]'
    }

    attribute_map = {
        'date_last_played': 'dateLastPlayed',
        'character_ids': 'characterIds'
    }

    def __init__(self, date_last_played=None, character_ids=None):
        """
        DestinyEntitiesProfilesDestinyProfileComponent - a model defined in Swagger
        """

        self._date_last_played = None
        self._character_ids = None
        self.discriminator = None

        if date_last_played is not None:
          self.date_last_played = date_last_played
        if character_ids is not None:
          self.character_ids = character_ids

    @property
    def date_last_played(self):
        """
        Gets the date_last_played of this DestinyEntitiesProfilesDestinyProfileComponent.
        The last time the user played with any character on this Profile.

        :return: The date_last_played of this DestinyEntitiesProfilesDestinyProfileComponent.
        :rtype: datetime
        """
        return self._date_last_played

    @date_last_played.setter
    def date_last_played(self, date_last_played):
        """
        Sets the date_last_played of this DestinyEntitiesProfilesDestinyProfileComponent.
        The last time the user played with any character on this Profile.

        :param date_last_played: The date_last_played of this DestinyEntitiesProfilesDestinyProfileComponent.
        :type: datetime
        """

        self._date_last_played = date_last_played

    @property
    def character_ids(self):
        """
        Gets the character_ids of this DestinyEntitiesProfilesDestinyProfileComponent.
        A list of the character IDs, for further querying on your part.

        :return: The character_ids of this DestinyEntitiesProfilesDestinyProfileComponent.
        :rtype: list[int]
        """
        return self._character_ids

    @character_ids.setter
    def character_ids(self, character_ids):
        """
        Sets the character_ids of this DestinyEntitiesProfilesDestinyProfileComponent.
        A list of the character IDs, for further querying on your part.

        :param character_ids: The character_ids of this DestinyEntitiesProfilesDestinyProfileComponent.
        :type: list[int]
        """

        self._character_ids = character_ids

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyEntitiesProfilesDestinyProfileComponent):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
