# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.

    OpenAPI spec version: 2.0.0
    Contact: support@bungie.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class DestinyDefinitionsDestinyVendorCategoryOverlayDefinition(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'choice_description': 'str',
        'description': 'str',
        'icon': 'str',
        'title': 'str'
    }

    attribute_map = {
        'choice_description': 'choiceDescription',
        'description': 'description',
        'icon': 'icon',
        'title': 'title'
    }

    def __init__(self, choice_description=None, description=None, icon=None, title=None):
        """
        DestinyDefinitionsDestinyVendorCategoryOverlayDefinition - a model defined in Swagger
        """

        self._choice_description = None
        self._description = None
        self._icon = None
        self._title = None
        self.discriminator = None

        if choice_description is not None:
          self.choice_description = choice_description
        if description is not None:
          self.description = description
        if icon is not None:
          self.icon = icon
        if title is not None:
          self.title = title

    @property
    def choice_description(self):
        """
        Gets the choice_description of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.

        :return: The choice_description of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.
        :rtype: str
        """
        return self._choice_description

    @choice_description.setter
    def choice_description(self, choice_description):
        """
        Sets the choice_description of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.

        :param choice_description: The choice_description of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.
        :type: str
        """

        self._choice_description = choice_description

    @property
    def description(self):
        """
        Gets the description of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.

        :return: The description of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.

        :param description: The description of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.
        :type: str
        """

        self._description = description

    @property
    def icon(self):
        """
        Gets the icon of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.

        :return: The icon of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """
        Sets the icon of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.

        :param icon: The icon of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.
        :type: str
        """

        self._icon = icon

    @property
    def title(self):
        """
        Gets the title of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.

        :return: The title of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """
        Sets the title of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.

        :param title: The title of this DestinyDefinitionsDestinyVendorCategoryOverlayDefinition.
        :type: str
        """

        self._title = title

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, DestinyDefinitionsDestinyVendorCategoryOverlayDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
